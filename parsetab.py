
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGEGTLELTEQNEleftTIMESDIVIDEleftPLUSMINUSASSIGN COLON DIVIDE ELIF ELSE EQ FOR GE GT ID IF IN LBRACE LE LPAREN LT MINUS NE NUMBER PLUS RANGE RBRACE RPAREN TIMES WHILE\n        stmts : stmts stmt\n        | empty\n        \n        stmt : assignment\n        | for\n        | if\n        | while\n        | expression\n        \n        if : IF expression COLON LBRACE stmts RBRACE elif\n        \n        elif : ELIF expression COLON LBRACE stmts RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE stmts RBRACE\n        | empty\n        \n        while : WHILE expression COLON LBRACE stmts RBRACE\n        \n        for : FOR ID IN RANGE LPAREN NUMBER RPAREN COLON LBRACE stmts RBRACE\n        \n        assignment : ID ASSIGN expression\n        \n        expression : expression PLUS term\n        | expression MINUS term\n        | expression GE term\n        | expression EQ term\n        | expression NE term\n        | expression LT term\n        | expression LE term\n        | expression GT term\n        | term\n        \n        term : term TIMES factor\n        | term DIVIDE factor\n        | factor\n        \n        factor : NUMBER\n        | ID\n        | LPAREN expression RPAREN\n        empty :'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,31,32,33,34,35,36,37,38,39,40,41,43,46,47,49,50,52,53,55,56,58,59,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,9,-2,-1,-3,-4,-5,-6,-7,-29,26,28,-28,28,28,-24,-27,28,28,28,28,28,28,28,28,28,-29,28,28,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,9,9,-31,-13,-8,28,-10,-12,-31,-31,9,-31,9,-14,9,-11,-31,-9,]),'FOR':([0,1,2,3,4,5,6,7,8,9,12,15,16,28,33,34,35,36,37,38,39,40,41,43,46,47,49,50,52,53,55,56,58,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,10,-2,-1,-3,-4,-5,-6,-7,-29,-28,-24,-27,-29,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,10,10,-31,-13,-8,-10,-12,-31,-31,10,-31,10,-14,10,-11,-31,-9,]),'IF':([0,1,2,3,4,5,6,7,8,9,12,15,16,28,33,34,35,36,37,38,39,40,41,43,46,47,49,50,52,53,55,56,58,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,13,-2,-1,-3,-4,-5,-6,-7,-29,-28,-24,-27,-29,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,13,13,-31,-13,-8,-10,-12,-31,-31,13,-31,13,-14,13,-11,-31,-9,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,12,15,16,28,33,34,35,36,37,38,39,40,41,43,46,47,49,50,52,53,55,56,58,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,14,-2,-1,-3,-4,-5,-6,-7,-29,-28,-24,-27,-29,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,14,14,-31,-13,-8,-10,-12,-31,-31,14,-31,14,-14,14,-11,-31,-9,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,31,32,33,34,35,36,37,38,39,40,41,43,46,47,49,50,51,52,53,55,56,58,59,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,12,-2,-1,-3,-4,-5,-6,-7,-29,12,-28,12,12,-24,-27,12,12,12,12,12,12,12,12,12,-29,12,12,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,54,12,12,-31,-13,-8,12,-10,-12,-31,-31,12,-31,12,-14,12,-11,-31,-9,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,31,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,50,52,53,55,56,58,59,60,62,66,68,69,70,71,72,73,74,75,76,],[-31,11,-2,-1,-3,-4,-5,-6,-7,-29,11,-28,11,11,-24,-27,11,11,11,11,11,11,11,11,11,-29,11,11,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,51,-31,-31,11,11,-31,-13,-8,11,-10,-12,-31,-31,11,-31,11,-14,11,-11,-31,-9,]),'$end':([0,1,2,3,4,5,6,7,8,9,12,15,16,28,33,34,35,36,37,38,39,40,41,43,46,47,55,56,58,60,62,72,74,75,76,],[-31,0,-2,-1,-3,-4,-5,-6,-7,-29,-28,-24,-27,-29,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-13,-8,-10,-12,-14,-11,-31,-9,]),'RBRACE':([2,3,4,5,6,7,8,9,12,15,16,28,33,34,35,36,37,38,39,40,41,43,46,47,49,50,52,53,55,56,58,60,62,66,68,69,70,71,72,73,74,75,76,],[-2,-1,-3,-4,-5,-6,-7,-29,-28,-24,-27,-29,-16,-17,-18,-19,-20,-21,-22,-23,-15,-30,-25,-26,-31,-31,55,56,-31,-13,-8,-10,-12,-31,-31,72,-31,74,-14,75,-11,-31,-9,]),'PLUS':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[17,-29,-28,-24,-27,17,-29,17,17,-16,-17,-18,-19,-20,-21,-22,-23,17,-30,-25,-26,17,]),'MINUS':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[18,-29,-28,-24,-27,18,-29,18,18,-16,-17,-18,-19,-20,-21,-22,-23,18,-30,-25,-26,18,]),'GE':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[19,-29,-28,-24,-27,19,-29,19,19,-16,-17,-18,-19,-20,-21,-22,-23,19,-30,-25,-26,19,]),'EQ':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[20,-29,-28,-24,-27,20,-29,20,20,-16,-17,-18,-19,-20,-21,-22,-23,20,-30,-25,-26,20,]),'NE':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[21,-29,-28,-24,-27,21,-29,21,21,-16,-17,-18,-19,-20,-21,-22,-23,21,-30,-25,-26,21,]),'LT':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[22,-29,-28,-24,-27,22,-29,22,22,-16,-17,-18,-19,-20,-21,-22,-23,22,-30,-25,-26,22,]),'LE':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[23,-29,-28,-24,-27,23,-29,23,23,-16,-17,-18,-19,-20,-21,-22,-23,23,-30,-25,-26,23,]),'GT':([8,9,12,15,16,27,28,29,30,33,34,35,36,37,38,39,40,41,43,46,47,64,],[24,-29,-28,-24,-27,24,-29,24,24,-16,-17,-18,-19,-20,-21,-22,-23,24,-30,-25,-26,24,]),'ASSIGN':([9,],[25,]),'TIMES':([9,12,15,16,28,33,34,35,36,37,38,39,40,43,46,47,],[-29,-28,31,-27,-29,31,31,31,31,31,31,31,31,-30,-25,-26,]),'DIVIDE':([9,12,15,16,28,33,34,35,36,37,38,39,40,43,46,47,],[-29,-28,32,-27,-29,32,32,32,32,32,32,32,32,-30,-25,-26,]),'RPAREN':([12,15,16,27,28,33,34,35,36,37,38,39,40,43,46,47,54,],[-28,-24,-27,43,-29,-16,-17,-18,-19,-20,-21,-22,-23,-30,-25,-26,57,]),'COLON':([12,15,16,28,29,30,33,34,35,36,37,38,39,40,43,46,47,57,61,64,],[-28,-24,-27,-29,44,45,-16,-17,-18,-19,-20,-21,-22,-23,-30,-25,-26,63,65,67,]),'IN':([26,],[42,]),'RANGE':([42,],[48,]),'LBRACE':([44,45,63,65,67,],[49,50,66,68,70,]),'ELIF':([55,75,],[59,59,]),'ELSE':([55,75,],[61,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmts':([0,49,50,66,68,70,],[1,52,53,69,71,73,]),'empty':([0,49,50,55,66,68,70,75,],[2,2,2,62,2,2,2,62,]),'stmt':([1,52,53,69,71,73,],[3,3,3,3,3,3,]),'assignment':([1,52,53,69,71,73,],[4,4,4,4,4,4,]),'for':([1,52,53,69,71,73,],[5,5,5,5,5,5,]),'if':([1,52,53,69,71,73,],[6,6,6,6,6,6,]),'while':([1,52,53,69,71,73,],[7,7,7,7,7,7,]),'expression':([1,11,13,14,25,52,53,59,69,71,73,],[8,27,29,30,41,8,8,64,8,8,8,]),'term':([1,11,13,14,17,18,19,20,21,22,23,24,25,52,53,59,69,71,73,],[15,15,15,15,33,34,35,36,37,38,39,40,15,15,15,15,15,15,15,]),'factor':([1,11,13,14,17,18,19,20,21,22,23,24,25,31,32,52,53,59,69,71,73,],[16,16,16,16,16,16,16,16,16,16,16,16,16,46,47,16,16,16,16,16,16,]),'elif':([55,75,],[58,76,]),'else':([55,75,],[60,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmts","S'",1,None,None,None),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','myparser.py',36),
  ('stmts -> empty','stmts',1,'p_stmts','myparser.py',37),
  ('stmt -> assignment','stmt',1,'p_statement','myparser.py',47),
  ('stmt -> for','stmt',1,'p_statement','myparser.py',48),
  ('stmt -> if','stmt',1,'p_statement','myparser.py',49),
  ('stmt -> while','stmt',1,'p_statement','myparser.py',50),
  ('stmt -> expression','stmt',1,'p_statement','myparser.py',51),
  ('if -> IF expression COLON LBRACE stmts RBRACE elif','if',7,'p_if','myparser.py',57),
  ('elif -> ELIF expression COLON LBRACE stmts RBRACE elif','elif',7,'p_elif','myparser.py',63),
  ('elif -> else','elif',1,'p_elif','myparser.py',64),
  ('else -> ELSE COLON LBRACE stmts RBRACE','else',5,'p_else','myparser.py',73),
  ('else -> empty','else',1,'p_else','myparser.py',74),
  ('while -> WHILE expression COLON LBRACE stmts RBRACE','while',6,'p_while','myparser.py',81),
  ('for -> FOR ID IN RANGE LPAREN NUMBER RPAREN COLON LBRACE stmts RBRACE','for',11,'p_for','myparser.py',87),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','myparser.py',93),
  ('expression -> expression PLUS term','expression',3,'p_expr_operator','myparser.py',99),
  ('expression -> expression MINUS term','expression',3,'p_expr_operator','myparser.py',100),
  ('expression -> expression GE term','expression',3,'p_expr_operator','myparser.py',101),
  ('expression -> expression EQ term','expression',3,'p_expr_operator','myparser.py',102),
  ('expression -> expression NE term','expression',3,'p_expr_operator','myparser.py',103),
  ('expression -> expression LT term','expression',3,'p_expr_operator','myparser.py',104),
  ('expression -> expression LE term','expression',3,'p_expr_operator','myparser.py',105),
  ('expression -> expression GT term','expression',3,'p_expr_operator','myparser.py',106),
  ('expression -> term','expression',1,'p_expr_operator','myparser.py',107),
  ('term -> term TIMES factor','term',3,'p_term','myparser.py',116),
  ('term -> term DIVIDE factor','term',3,'p_term','myparser.py',117),
  ('term -> factor','term',1,'p_term','myparser.py',118),
  ('factor -> NUMBER','factor',1,'p_factor','myparser.py',127),
  ('factor -> ID','factor',1,'p_factor','myparser.py',128),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','myparser.py',129),
  ('empty -> <empty>','empty',0,'p_empty','myparser.py',137),
]
